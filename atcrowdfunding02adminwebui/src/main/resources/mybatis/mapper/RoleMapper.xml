<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hurh.crowd.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.hurh.crowd.entity.Role">
    <id column="ID" jdbcType="DOUBLE" property="id" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Example_Where_Clause">

    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">

    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">

    ID, NAME
  </sql>
  <select id="selectByExample" parameterType="com.hurh.crowd.entity.RoleExample" resultMap="BaseResultMap">

    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_ROLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">

    select 
    <include refid="Base_Column_List" />
    from T_ROLE
    where ID = #{id,jdbcType=DOUBLE}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">

    delete from T_ROLE
    where ID = #{id,jdbcType=DOUBLE}
  </delete>
  <delete id="deleteByExample" parameterType="com.hurh.crowd.entity.RoleExample">

    delete from T_ROLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hurh.crowd.entity.Role">

    insert into T_ROLE (ID, NAME)
    values (#{id,jdbcType=DOUBLE}, #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hurh.crowd.entity.Role">

    insert into T_ROLE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DOUBLE},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hurh.crowd.entity.RoleExample" resultType="java.lang.Long">

    select count(*) from T_ROLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">

    update T_ROLE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=DOUBLE},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">

    update T_ROLE
    set ID = #{record.id,jdbcType=DOUBLE},
      NAME = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hurh.crowd.entity.Role">
    update T_ROLE
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DOUBLE}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hurh.crowd.entity.Role">

    update T_ROLE
    set NAME = #{name,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DOUBLE}
  </update>

  <select id="getRolesByInputStr" resultMap="BaseResultMap">
     select id,name from t_role
     where name like '%' ||#{inputStr}||'%'
  </select>

  <select id="getAssignRoles" resultMap="BaseResultMap" parameterType="Map" >
    select id,name from t_role
    where 1 = 1
    <if test="isAssign=='yes'">
        and  id in (select role_id from inner_admin_role where admin_id = #{id} )
    </if>
    <if test="isAssign=='no'">
      and  id not in (select role_id from inner_admin_role where admin_id = #{id} )
    </if>
  </select>

  <delete id="deleteRelatuionShip" parameterType="map">
      delete from inner_admin_role where admin_id = #{admin_id} and role_id = #{role_id}
  </delete>

  <insert id="saveNewrelationship" parameterType="map">
      insert into inner_admin_role (id,admin_id, role_id, create_time )
      VALUES (
      #{id},
      #{admin_id},
      #{role_id},
      #{createTime}
      )
  </insert>
</mapper>